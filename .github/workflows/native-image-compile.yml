name: Build GraalVM Native Image

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          components: native-image

      - name: Build with Maven
        run: mvn -Pnative native:compile -DskipTests
        env:
          MAVEN_OPTS: '-Dfile.encoding=UTF-8'

      - name: Create self-extracting archive (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          # Download and install 7-Zip
          $url = "https://www.7-zip.org/a/7z1900-x64.exe"
          $zipInstaller = "7z_installer.exe"
          $7zipDir = "C:\Program Files\7-Zip"
          Invoke-WebRequest -Uri $url -OutFile $zipInstaller
          Start-Process -FilePath $zipInstaller -ArgumentList "/S /D=$7zipDir" -Wait

          # Create the batch file
          $batchContent = @"
          @echo off
          chcp 65001
          start "" "timepill-backup-17.exe" %*
          "@
          $batchPath = "run_with_utf8.bat"
          Set-Content -Path $batchPath -Value $batchContent

          # Create a temporary directory
          $tempDir = "timepill-backup-17-windows"
          New-Item -ItemType Directory -Force -Path $tempDir

          # Move the EXE and batch file to the temporary directory
          Move-Item -Path "target/native/timepill-backup-17.exe" -Destination "$tempDir\timepill-backup-17.exe"
          Move-Item -Path $batchPath -Destination "$tempDir\run_with_utf8.bat"

          # Locate 7-Zip executable
          $sfxPath = Join-Path -Path $7zipDir -ChildPath "7z.exe"
          if (-not (Test-Path $sfxPath)) {
            Write-Error "7-Zip not found. Please ensure it is installed correctly."
            exit 1
          }

          # Create a self-extracting EXE with 7-Zip
          & $sfxPath a -sfx7z.cab -t7z "timepill-backup-17-windows.exe" "$tempDir\*"

          # Clean up
          Remove-Item -Path $tempDir -Recurse -Force
          Remove-Item -Path $zipInstaller -Force

      - name: Rename native image (macOS)
        if: runner.os == 'macOS'
        run: |
          mkdir -p ./timepill-backup-17-macos
          mv target/native/timepill-backup-17 ./timepill-backup-17-macos/timepill-backup-17

      - name: Upload native image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: native-image-${{ matrix.os }}
          path: ${{ runner.os == 'macOS' && './timepill-backup-17-macos/timepill-backup-17' || './timepill-backup-17-windows/timepill-backup-17-windows.exe' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: List contents of the workspace
        run: ls -R

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: native-image-macos-latest
          path: ./dist

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: native-image-windows-latest
          path: ./dist

      - name: List target directory
        run: ls -R ./dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: binaries-${{ github.run_id }}
          release_name: release-${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload macOS binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/timepill-backup-17
          asset_name: timepill-backup-17-macOS
          asset_content_type: application/octet-stream

      - name: Upload Windows binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/timepill-backup-17-windows.exe
          asset_name: timepill-backup-17-windows.exe
          asset_content_type: application/octet-stream
