name: Build GraalVM Native Image

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17.0.7'
          distribution: 'temurin'

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.7'
          distribution: 'graalvm'
          components: native-image

      - name: Build with Maven
        run: mvn -Pnative native:compile -DskipTests

      - name: List target directory
        run: ls target/native

      - name: Create output directory
        run: mkdir -p ./timepill-backup-17-macos

      - name: Rename native image (macOS)
        if: runner.os == 'macOS'
        run: |
          mkdir -p ./timepill-backup-17-macos
          mv target/native/timepill-backup-17 ./timepill-backup-17-macos/timepill-backup-17

      - name: Rename native image (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir -p ./timepill-backup-17-windows
          mv target/native/timepill-backup-17.exe ./timepill-backup-17-windows/timepill-backup-17.exe

      - name: Upload native image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: native-image-${{ matrix.os }}
          path: ${{ runner.os == 'macOS' && './timepill-backup-17-macos/timepill-backup-17' || './timepill-backup-17-windows/timepill-backup-17.exe' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    
    steps:

      - name: List contents of the workspace
        run: ls -R
    
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: native-image-macos-latest
          path: ./dist

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: native-image-windows-latest
          path: ./dist
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: binaries-${{ github.run_id }}
          release_name: release-${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload macOS binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/native-image-macos-latest
          asset_name: timepill-backup-17-macos
          asset_content_type: application/octet-stream

      - name: Upload Windows binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/native-image-windows-latest
          asset_name: timepill-backup-17-windows.exe
          asset_content_type: application/octet-stream

