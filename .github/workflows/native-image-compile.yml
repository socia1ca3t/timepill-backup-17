name: Build GraalVM Native Image

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17.0.7'
          distribution: 'temurin'

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.7'  # 使用指定的 JDK 17 版本
          distribution: 'graalvm'  # 使用 GraalVM 分发
          components: native-image

      - name: Build with Maven
        run: mvn -Pnative native:compile -DskipTests

      - name: List target directory
        run: ls -la target

      - name: Rename native image (macOS)
        if: runner.os == 'macOS'
        run: |
          mkdir -p ./timepill-backup-17-macos
          mv target/timepill-backup-17 ./timepill-backup-17-macos/timepill-backup-17

      - name: Rename native image (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir -p ./timepill-backup-17-windows
          mv target/timepill-backup-17.exe ./timepill-backup-17-windows/timepill-backup-17.exe

      - name: Upload native image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: native-image-${{ matrix.os }}
          path: ${{ runner.os == 'macOS' && './timepill-backup-17-macos/timepill-backup-17' || './timepill-backup-17-windows/timepill-backup-17.exe' }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: native-image-macos
          path: ./dist

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: native-image-windows
          path: ./dist

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
          files: |
            dist/timepill-backup-17-macos
            dist/timepill-backup-17-windows.exe
