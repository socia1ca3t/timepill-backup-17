name: Build GraalVM Native Image

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    permissions: write-all
    
    steps:
     - name: Check iexpress.exe availability (Windows)
       if: runner.os == 'Windows'
       shell: cmd
       run: |
          where.exe iexpress.exe

     - name: Checkout code
       uses: actions/checkout@v3

     - name: Download release asset
       shell: pwsh
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       run: |
          # Define variables
          $repo = "socia1ca3t/timepill-backup-17"
          $releaseTag = "release-10370406030"
          $assetName = "timepill-backup-17-windows.exe"
          
          # Get the release ID from the tag
          $releaseId = (Invoke-RestMethod -Uri "https://api.github.com/repos/$repo/releases/tags/$releaseTag" -Headers @{Authorization = "token $env:GITHUB_TOKEN"}).id
          
          # Download the asset
          $assetUrl = (Invoke-RestMethod -Uri "https://api.github.com/repos/$repo/releases/$releaseId/assets?name=$assetName" -Headers @{Authorization = "token $env:GITHUB_TOKEN"} | Select-Object -First 1).browser_download_url
          
          Invoke-WebRequest -Uri $assetUrl -OutFile $assetName
          
          # Verify download
          Get-Item $assetName
