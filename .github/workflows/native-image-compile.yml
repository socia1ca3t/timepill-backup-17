name: native-image-compile

on: [push]

jobs:
  native-image-compile-on-host:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-latest]
        graal_version: [21.2.0.r11-grl]

    steps:
    - uses: actions/checkout@v3

    - name: Cache SDKMAN installation
      uses: actions/cache@v3
      with:
        path: ~/.sdkman
        key: ${{ runner.os }}-sdkman-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-sdkman-

    - name: Install SDKMAN and GraalVM
      run: |
        curl -s "https://get.sdkman.io" | bash
        source "$HOME/.sdkman/bin/sdkman-init.sh"
        sdk install java ${{ matrix.graal_version }}
        java -version

    - name: Install GraalVM Native Image
      run: |
        source "$HOME/.sdkman/bin/sdkman-init.sh"
        gu install native-image
        native-image --version

    - name: Install Maven, that uses GraalVM for later builds
      run: |
        source "$HOME/.sdkman/bin/sdkman-init.sh"
        sdk install maven
        mvn --version

    - name: Run GraalVM Native Image compilation of Spring Boot App
      run: |
        source "$HOME/.sdkman/bin/sdkman-init.sh"
        mvn -B clean package -Pnative --no-transfer-progress

    - name: Upload Native Image Artifact
      uses: actions/upload-artifact@v3
      with:
        name: native-image-${{ runner.os }}
        path: target/*

  release:
    needs: native-image-compile-on-host
    runs-on: ubuntu-latest
    steps:
    - name: Download macOS artifact
      uses: actions/download-artifact@v3
      with:
        name: native-image-macOS-latest

    - name: Download Windows artifact
      uses: actions/download-artifact@v3
      with:
        name: native-image-windows-latest

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.1  # 可根据需要动态生成版本号
        release_name: Native Image Release v1.0.0
        draft: false
        prerelease: false

    - name: Upload macOS Native Image to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: native-image-macOS-latest
        asset_name: native-image-macos
        asset_content_type: application/octet-stream

    - name: Upload Windows Native Image to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: native-image-windows-latest
        asset_name: native-image-windows.exe
        asset_content_type: application/octet-stream
